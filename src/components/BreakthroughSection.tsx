'use client'

import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Target, TrendingUp, Users, Globe, ChevronRight, ChevronLeft, Star, Award, Lightbulb, Crown, Zap, Factory, BookOpen, Heart, CheckCircle, ArrowRight } from 'lucide-react'

interface Argument {
  id: string
  title: string
  description: string
  details: string[]
  evidence: string[]
  icon: string
  color: string
}

const breakthroughArguments: Argument[] = [
  {
    id: 'crisis-resolution',
    title: 'Ch·∫•m d·ª©t kh·ªßng ho·∫£ng ƒë∆∞·ªùng l·ªëi c·ª©u n∆∞·ªõc',
    description: 'Gi·∫£i quy·∫øt t√¨nh tr·∫°ng b·∫ø t·∫Øc c·ªßa phong tr√†o y√™u n∆∞·ªõc tr∆∞·ªõc khi ƒê·∫£ng ra ƒë·ªùi',
    details: [
      'C√°c phong tr√†o y√™u n∆∞·ªõc tr∆∞·ªõc ƒë√≥ ƒë·ªÅu th·∫•t b·∫°i',
      'Thi·∫øu ƒë∆∞·ªùng l·ªëi ch√≠nh tr·ªã ƒë√∫ng ƒë·∫Øn',
      'Ch∆∞a c√≥ t·ªï ch·ª©c v·ªØng m·∫°nh l√£nh ƒë·∫°o',
      'ƒê·∫£ng ra ƒë·ªùi v·ªõi C∆∞∆°ng lƒ©nh ch√≠nh tr·ªã ƒë·∫ßu ti√™n'
    ],
    evidence: [
      'Phong tr√†o C·∫ßn V∆∞∆°ng, Y√™n Th·∫ø th·∫•t b·∫°i',
      'Phan B·ªôi Ch√¢u, Phan Ch√¢u Trinh kh√¥ng th√†nh c√¥ng',
      'Vi·ªát Nam Qu·ªëc d√¢n ƒë·∫£ng th·∫•t b·∫°i',
      'C∆∞∆°ng lƒ©nh th√°ng 2/1930 x√°c ƒë·ªãnh ƒë∆∞·ªùng l·ªëi ƒë√∫ng'
    ],
    icon: 'üéØ',
    color: 'from-red-500 to-red-700'
  },
  {
    id: 'correct-path',
    title: 'Kh·∫≥ng ƒë·ªãnh con ƒë∆∞·ªùng c·ª©u n∆∞·ªõc ƒë√∫ng ƒë·∫Øn',
    description: 'X√°c ƒë·ªãnh con ƒë∆∞·ªùng c√°ch m·∫°ng v√¥ s·∫£n cho d√¢n t·ªôc Vi·ªát Nam',
    details: [
      'L·ª±a ch·ªçn con ƒë∆∞·ªùng c√°ch m·∫°ng v√¥ s·∫£n',
      'Con ƒë∆∞·ªùng duy nh·∫•t ƒë√∫ng ƒë·ªÉ gi·∫£i ph√≥ng d√¢n t·ªôc',
      'Kh·∫≥ng ƒë·ªãnh vai tr√≤ l√£nh ƒë·∫°o c·ªßa giai c·∫•p v√¥ s·∫£n',
      'C√°ch m·∫°ng Vi·ªát Nam tr·ªü th√†nh b·ªô ph·∫≠n c·ªßa c√°ch m·∫°ng th·∫ø gi·ªõi'
    ],
    evidence: [
      'Giai c·∫•p v√¥ s·∫£n ƒë√£ tr∆∞·ªüng th√†nh',
      'ƒê·ªß s·ª©c l√£nh ƒë·∫°o c√°ch m·∫°ng',
      'K·∫øt n·ªëi v·ªõi c√°ch m·∫°ng v√¥ s·∫£n th·∫ø gi·ªõi',
      'M·ª•c ti√™u gi·∫£i ph√≥ng d√¢n t·ªôc v√† giai c·∫•p'
    ],
    icon: 'üõ§Ô∏è',
    color: 'from-blue-500 to-blue-700'
  },
  {
    id: 'historical-synthesis',
    title: 'S·∫£n ph·∫©m c·ªßa s·ª± k·∫øt h·ª£p c√°c y·∫øu t·ªë l·ªãch s·ª≠',
    description: 'K·∫øt qu·∫£ c·ªßa s·ª± chu·∫©n b·ªã ƒë·∫ßy ƒë·ªß v√† th·ªëng nh·∫•t c√°c y·∫øu t·ªë c·∫•u th√†nh',
    details: [
      'K·∫øt h·ª£p ch·ªß nghƒ©a M√°c-L√™nin v·ªõi th·ª±c ti·ªÖn Vi·ªát Nam',
      'Th·ªëng nh·∫•t t∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh v·ªõi phong tr√†o',
      'Chu·∫©n b·ªã v·ªÅ t∆∞ t∆∞·ªüng, l√Ω lu·∫≠n, ch√≠nh tr·ªã, t·ªï ch·ª©c',
      'Th·ªëng nh·∫•t ba t·ªï ch·ª©c c·ªông s·∫£n th√†nh m·ªôt ƒê·∫£ng'
    ],
    evidence: [
      'Nguy·ªÖn √Åi Qu·ªëc truy·ªÅn b√° M√°c-L√™nin',
      'Chu·∫©n b·ªã ƒëi·ªÅu ki·ªán th√†nh l·∫≠p ƒê·∫£ng',
      'Ch·ªß tr√¨ H·ªôi ngh·ªã h·ª£p nh·∫•t',
      'So·∫°n th·∫£o C∆∞∆°ng lƒ©nh ch√≠nh tr·ªã ƒë·∫ßu ti√™n'
    ],
    icon: 'üîó',
    color: 'from-green-500 to-green-700'
  }
]

interface BreakthroughSectionProps {
  onNext: () => void
  onBack: () => void
  onGoToDashboard?: () => void
}

export default function BreakthroughSection({ onNext, onBack, onGoToDashboard }: BreakthroughSectionProps) {
  const [selectedArgument, setSelectedArgument] = useState<string | null>(null)
  const [currentView, setCurrentView] = useState(0)

  // Scroll to top when currentView changes
  useEffect(() => {
    window.scrollTo({ top: 0, behavior: 'smooth' })
  }, [currentView])

  const views = ['T·ªïng quan', 'Lu·∫≠n ƒëi·ªÉm', 'Ch·ª©ng minh', 'K·∫øt lu·∫≠n']

  const renderOverview = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">B∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i c·ªßa c√°ch m·∫°ng Vi·ªát Nam</h2>
        <p className="text-gray-300 text-lg">
          Ch·ª©ng minh: S·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam ‚Äì B∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i c·ªßa c√°ch m·∫°ng Vi·ªát Nam
        </p>
      </motion.div>

      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-gradient-to-r from-red-600 to-red-800 rounded-2xl p-8 mb-8"
      >
        <div className="text-center">
          <div className="text-6xl mb-4">üåü</div>
          <h3 className="text-2xl font-bold text-white mb-4">B∆∞·ªõc ngo·∫∑t l·ªãch s·ª≠</h3>
          <p className="text-gray-200 text-lg">
            S·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam ng√†y 3/2/1930 ƒë√°nh d·∫•u m·ªôt b∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i 
            trong l·ªãch s·ª≠ c√°ch m·∫°ng Vi·ªát Nam, m·ªü ra k·ª∑ nguy√™n m·ªõi cho d√¢n t·ªôc.
          </p>
        </div>
      </motion.div>

      <div className="grid md:grid-cols-3 gap-6">
        {breakthroughArguments.map((argument, index) => (
          <motion.div
            key={argument.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.2 }}
            className={`bg-gradient-to-br ${argument.color} rounded-xl p-6 cursor-pointer transform hover:scale-105 transition-all duration-300`}
            onClick={() => setSelectedArgument(argument.id)}
          >
            <div className="text-4xl mb-4">{argument.icon}</div>
            <h3 className="text-xl font-bold text-white mb-3">{argument.title}</h3>
            <p className="text-gray-200 text-sm mb-4">{argument.description}</p>
          </motion.div>
        ))}
      </div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.8 }}
        className="bg-gradient-to-r from-yellow-600 to-yellow-800 rounded-xl p-8"
      >
        <div className="text-center">
          <div className="text-4xl mb-4">üìú</div>
          <h3 className="text-2xl font-bold text-white mb-4">M·ªánh ƒë·ªÅ c·∫ßn ch·ª©ng minh</h3>
          <blockquote className="text-white text-xl italic mb-4">
            S·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam ‚Äì B∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i c·ªßa c√°ch m·∫°ng Vi·ªát Nam
          </blockquote>
          <p className="text-gray-200">
            Th√¥ng qua ba lu·∫≠n ƒëi·ªÉm ch√≠nh, ch√∫ng ta s·∫Ω ch·ª©ng minh t√≠nh ƒë√∫ng ƒë·∫Øn c·ªßa m·ªánh ƒë·ªÅ n√†y.
          </p>
        </div>
      </motion.div>
    </div>
  )

  const renderArguments = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">Ba lu·∫≠n ƒëi·ªÉm ch√≠nh</h2>
        <p className="text-gray-300 text-lg">
          Ph√¢n t√≠ch chi ti·∫øt c√°c lu·∫≠n ƒëi·ªÉm ch·ª©ng minh b∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i
        </p>
      </motion.div>

      <div className="space-y-8">
        {breakthroughArguments.map((argument, index) => (
          <motion.div
            key={argument.id}
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: index * 0.3 }}
            className={`bg-gradient-to-r ${argument.color} rounded-2xl p-8`}
          >
            <div className="flex items-start space-x-6">
              <div className="text-6xl">{argument.icon}</div>
              <div className="flex-1">
                <h3 className="text-2xl font-bold text-white mb-4">
                  Lu·∫≠n ƒëi·ªÉm {index + 1}: {argument.title}
                </h3>
                <p className="text-gray-200 text-lg mb-6">{argument.description}</p>
                
                <div className="grid md:grid-cols-2 gap-6">
                  <div>
                    <h4 className="text-xl font-bold text-white mb-4">N·ªôi dung chi ti·∫øt:</h4>
                    <ul className="space-y-2">
                      {argument.details.map((detail, idx) => (
                        <li key={idx} className="flex items-start text-gray-200">
                          <CheckCircle className="w-5 h-5 mr-3 mt-0.5 text-green-400 flex-shrink-0" />
                          <span>{detail}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                  
                  <div>
                    <h4 className="text-xl font-bold text-white mb-4">B·∫±ng ch·ª©ng l·ªãch s·ª≠:</h4>
                    <ul className="space-y-2">
                      {argument.evidence.map((evidence, idx) => (
                        <li key={idx} className="flex items-start text-gray-200">
                          <Star className="w-5 h-5 mr-3 mt-0.5 text-yellow-400 flex-shrink-0" />
                          <span>{evidence}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </motion.div>
        ))}
      </div>
    </div>
  )

  const renderProof = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">Ch·ª©ng minh khoa h·ªçc</h2>
        <p className="text-gray-300 text-lg">
          Lu·∫≠n ch·ª©ng logic v√† b·∫±ng ch·ª©ng l·ªãch s·ª≠
        </p>
      </motion.div>

      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-gradient-to-br from-purple-600 to-purple-800 rounded-2xl p-8 mb-8"
      >
        <div className="text-center">
          <div className="text-6xl mb-4">üî¨</div>
          <h3 className="text-3xl font-bold text-white mb-4">Ph∆∞∆°ng ph√°p ch·ª©ng minh</h3>
          <p className="text-gray-200 text-lg">
            S·ª≠ d·ª•ng ph∆∞∆°ng ph√°p duy v·∫≠t l·ªãch s·ª≠ ƒë·ªÉ ch·ª©ng minh t√≠nh t·∫•t y·∫øu v√† √Ω nghƒ©a c·ªßa b∆∞·ªõc ngo·∫∑t
          </p>
        </div>
      </motion.div>

      <div className="grid md:grid-cols-2 gap-8">
        <motion.div
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.3 }}
          className="bg-gradient-to-br from-red-600 to-red-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üìä</div>
          <h3 className="text-xl font-bold text-white mb-4">Tr∆∞·ªõc khi ƒê·∫£ng ra ƒë·ªùi</h3>
          <ul className="space-y-3 text-gray-200">
            <li className="flex items-start">
              <span className="text-red-400 mr-2">‚ùå</span>
              Phong tr√†o y√™u n∆∞·ªõc b·∫ø t·∫Øc
            </li>
            <li className="flex items-start">
              <span className="text-red-400 mr-2">‚ùå</span>
              Thi·∫øu ƒë∆∞·ªùng l·ªëi ƒë√∫ng ƒë·∫Øn
            </li>
            <li className="flex items-start">
              <span className="text-red-400 mr-2">‚ùå</span>
              Kh√¥ng c√≥ t·ªï ch·ª©c th·ªëng nh·∫•t
            </li>
            <li className="flex items-start">
              <span className="text-red-400 mr-2">‚ùå</span>
              C√°c phong tr√†o ƒë·ªÅu th·∫•t b·∫°i
            </li>
          </ul>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.5 }}
          className="bg-gradient-to-br from-green-600 to-green-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üéØ</div>
          <h3 className="text-xl font-bold text-white mb-4">Sau khi ƒê·∫£ng ra ƒë·ªùi</h3>
          <ul className="space-y-3 text-gray-200">
            <li className="flex items-start">
              <span className="text-green-400 mr-2">‚úÖ</span>
              C√≥ ƒë∆∞·ªùng l·ªëi c√°ch m·∫°ng ƒë√∫ng ƒë·∫Øn
            </li>
            <li className="flex items-start">
              <span className="text-green-400 mr-2">‚úÖ</span>
              T·ªï ch·ª©c th·ªëng nh·∫•t, v·ªØng m·∫°nh
            </li>
            <li className="flex items-start">
              <span className="text-green-400 mr-2">‚úÖ</span>
              C∆∞∆°ng lƒ©nh ch√≠nh tr·ªã khoa h·ªçc
            </li>
            <li className="flex items-start">
              <span className="text-green-400 mr-2">‚úÖ</span>
              L√£nh ƒë·∫°o c√°ch m·∫°ng th√†nh c√¥ng
            </li>
          </ul>
        </motion.div>
      </div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.7 }}
        className="bg-gradient-to-r from-blue-600 to-blue-800 rounded-xl p-8"
      >
        <div className="text-center">
          <div className="text-4xl mb-4">‚ö°</div>
          <h3 className="text-2xl font-bold text-white mb-4">S·ª± chuy·ªÉn bi·∫øn cƒÉn b·∫£n</h3>
          <div className="flex items-center justify-center space-x-4 text-white text-lg mb-6">
            <span className="bg-red-600 px-4 py-2 rounded-lg">Kh·ªßng ho·∫£ng</span>
            <ArrowRight className="w-6 h-6" />
            <span className="bg-yellow-600 px-4 py-2 rounded-lg">ƒê·∫£ng ra ƒë·ªùi</span>
            <ArrowRight className="w-6 h-6" />
            <span className="bg-green-600 px-4 py-2 rounded-lg">B∆∞·ªõc ngo·∫∑t</span>
          </div>
          <p className="text-gray-200">
            S·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng ƒë√£ t·∫°o ra m·ªôt s·ª± chuy·ªÉn bi·∫øn cƒÉn b·∫£n, 
            t·ª´ t√¨nh tr·∫°ng kh·ªßng ho·∫£ng sang k·ª∑ nguy√™n m·ªõi c·ªßa c√°ch m·∫°ng Vi·ªát Nam.
          </p>
        </div>
      </motion.div>
    </div>
  )

  const renderConclusion = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">K·∫øt lu·∫≠n</h2>
        <p className="text-gray-300 text-lg">
          Kh·∫≥ng ƒë·ªãnh m·ªánh ƒë·ªÅ v·ªÅ b∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i c·ªßa c√°ch m·∫°ng Vi·ªát Nam
        </p>
      </motion.div>

      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-gradient-to-br from-yellow-600 to-yellow-800 rounded-2xl p-8 mb-8"
      >
        <div className="text-center">
          <div className="text-6xl mb-4">üèÜ</div>
          <h3 className="text-3xl font-bold text-white mb-4">K·∫øt lu·∫≠n t·ªïng qu√°t</h3>
          <p className="text-gray-200 text-lg mb-6">
            Qua vi·ªác ph√¢n t√≠ch ba lu·∫≠n ƒëi·ªÉm ch√≠nh v·ªõi c√°c lu·∫≠n c·ª© v√† b·∫±ng ch·ª©ng l·ªãch s·ª≠ c·ª• th·ªÉ, 
            ch√∫ng ta c√≥ th·ªÉ kh·∫≥ng ƒë·ªãnh m·ªôt c√°ch khoa h·ªçc r·∫±ng:
          </p>
          
          <div className="bg-black bg-opacity-30 rounded-lg p-6">
            <blockquote className="text-white text-xl italic mb-4">
              S·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam th·ª±c s·ª± l√† m·ªôt b∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i 
              c·ªßa c√°ch m·∫°ng Vi·ªát Nam
            </blockquote>
          </div>
        </div>
      </motion.div>

      <div className="grid md:grid-cols-3 gap-6">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.3 }}
          className="bg-gradient-to-br from-red-600 to-red-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üéØ</div>
          <h3 className="text-xl font-bold text-white mb-4">√ù nghƒ©a l·ªãch s·ª≠</h3>
          <ul className="text-gray-200 text-sm space-y-2">
            <li>‚Ä¢ Ch·∫•m d·ª©t kh·ªßng ho·∫£ng ƒë∆∞·ªùng l·ªëi</li>
            <li>‚Ä¢ M·ªü ra k·ª∑ nguy√™n m·ªõi</li>
            <li>‚Ä¢ X√°c ƒë·ªãnh con ƒë∆∞·ªùng ƒë√∫ng ƒë·∫Øn</li>
            <li>‚Ä¢ T·∫°o ti·ªÅn ƒë·ªÅ cho th·∫Øng l·ª£i</li>
          </ul>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.5 }}
          className="bg-gradient-to-br from-blue-600 to-blue-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üåü</div>
          <h3 className="text-xl font-bold text-white mb-4">√ù nghƒ©a th·ªùi ƒë·∫°i</h3>
          <ul className="text-gray-200 text-sm space-y-2">
            <li>‚Ä¢ K·∫øt n·ªëi v·ªõi c√°ch m·∫°ng th·∫ø gi·ªõi</li>
            <li>‚Ä¢ √Åp d·ª•ng M√°c-L√™nin v√†o th·ª±c ti·ªÖn</li>
            <li>‚Ä¢ Kh·∫≥ng ƒë·ªãnh vai tr√≤ giai c·∫•p v√¥ s·∫£n</li>
            <li>‚Ä¢ M·ªü ƒë∆∞·ªùng cho c√°c d√¢n t·ªôc</li>
          </ul>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.7 }}
          className="bg-gradient-to-br from-green-600 to-green-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üöÄ</div>
          <h3 className="text-xl font-bold text-white mb-4">√ù nghƒ©a th·ª±c ti·ªÖn</h3>
          <ul className="text-gray-200 text-sm space-y-2">
            <li>‚Ä¢ L√£nh ƒë·∫°o c√°ch m·∫°ng th√†nh c√¥ng</li>
            <li>‚Ä¢ Gi√†nh ƒë·ªôc l·∫≠p d√¢n t·ªôc</li>
            <li>‚Ä¢ X√¢y d·ª±ng ch·ªß nghƒ©a x√£ h·ªôi</li>
            <li>‚Ä¢ ƒê·ªïi m·ªõi v√† ph√°t tri·ªÉn</li>
          </ul>
        </motion.div>
      </div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.9 }}
        className="bg-gradient-to-r from-purple-600 to-purple-800 rounded-xl p-8"
      >
        <div className="text-center">
          <div className="text-4xl mb-4">üìú</div>
          <h3 className="text-2xl font-bold text-white mb-4">L·ªùi kh·∫≥ng ƒë·ªãnh cu·ªëi c√πng</h3>
          <blockquote className="text-white text-lg italic mb-4">
            S·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam ƒë√£ gi·∫£i quy·∫øt th√†nh c√¥ng kh·ªßng ho·∫£ng ƒë∆∞·ªùng l·ªëi 
            v√† x√°c ƒë·ªãnh con ƒë∆∞·ªùng ph√°t tri·ªÉn ƒë√∫ng ƒë·∫Øn cho d√¢n t·ªôc, chu·∫©n b·ªã nh·ªØng ti·ªÅn ƒë·ªÅ c∆° b·∫£n 
            ƒë·ªÉ ƒë∆∞a c√°ch m·∫°ng Vi·ªát Nam ƒëi t·ª´ th·∫Øng l·ª£i n√†y ƒë·∫øn th·∫Øng l·ª£i kh√°c, 
            m√† ƒë·ªânh cao l√† th·∫Øng l·ª£i c·ªßa C√°ch m·∫°ng Th√°ng T√°m nƒÉm 1945. 
            ƒê√≥ ch√≠nh l√† √Ω nghƒ©a c·ªßa b∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i trong l·ªãch s·ª≠ d√¢n t·ªôc.
          </blockquote>
          <p className="text-gray-200 font-semibold">
            M·ªánh ƒë·ªÅ ƒë√£ ƒë∆∞·ª£c ch·ª©ng minh ho√†n to√†n ƒë√∫ng ƒë·∫Øn!
          </p>
        </div>
      </motion.div>
    </div>
  )

  const renderCurrentView = () => {
    switch (currentView) {
      case 0:
        return renderOverview()
      case 1:
        return renderArguments()
      case 2:
        return renderProof()
      case 3:
        return renderConclusion()
      default:
        return renderOverview()
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-red-900 to-gray-900 p-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-8"
        >
          <h1 className="text-4xl md:text-5xl font-bold text-white mb-4">
            B∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i c·ªßa c√°ch m·∫°ng Vi·ªát Nam
          </h1>
          <p className="text-gray-300 text-xl">
            Ch·ª©ng minh khoa h·ªçc v·ªÅ √Ω nghƒ©a l·ªãch s·ª≠ c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng
          </p>
        </motion.div>

        {/* View Selector */}
        <div className="flex justify-center mb-8">
          <div className="flex space-x-4 bg-black bg-opacity-30 rounded-full p-2">
            {views.map((view, index) => (
              <button
                key={index}
                onClick={() => setCurrentView(index)}
                className={`px-6 py-2 rounded-full text-sm font-medium transition-all duration-300 ${
                  currentView === index
                    ? 'bg-red-600 text-white'
                    : 'text-gray-300 hover:text-white hover:bg-gray-700'
                }`}
              >
                {view}
              </button>
            ))}
          </div>
        </div>

        {/* Content */}
        <AnimatePresence mode="wait">
          <motion.div
            key={currentView}
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            transition={{ duration: 0.3 }}
          >
            {renderCurrentView()}
          </motion.div>
        </AnimatePresence>

        {/* Navigation */}
        <div className="flex justify-between items-center mt-12">
          <div className="flex items-center space-x-4">
            <button
              onClick={onBack}
              className="flex items-center px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-300"
            >
              <ChevronLeft className="w-5 h-5 mr-2" />
              Quay l·∫°i
            </button>
            
            {onGoToDashboard && (
              <button
                onClick={onGoToDashboard}
                className="flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-300"
              >
                üìä B·∫£ng ƒëi·ªÅu khi·ªÉn
              </button>
            )}
          </div>
          
          <button
            onClick={onNext}
            className="flex items-center px-6 py-3 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors duration-300"
          >
            Ti·∫øp t·ª•c
            <ChevronRight className="w-5 h-5 ml-2" />
          </button>
        </div>
      </div>
    </div>
  )
}