'use client'

import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Target, TrendingUp, Users, Globe, ChevronRight, ChevronLeft, Star, Award, Lightbulb, Crown, Zap } from 'lucide-react'

interface Significance {
  id: string
  title: string
  description: string
  details: string[]
  quote?: string
  icon: string
  color: string
}

const historicalSignificances: Significance[] = [
  {
    id: 'end-crisis',
    title: 'Ch·∫•m d·ª©t kh·ªßng ho·∫£ng v·ªÅ ƒë∆∞·ªùng l·ªëi c·ª©u n∆∞·ªõc',
    description: 'K·∫øt th√∫c t√¨nh tr·∫°ng thi·∫øu ƒë∆∞·ªùng l·ªëi ƒë√∫ng ƒë·∫Øn trong phong tr√†o y√™u n∆∞·ªõc',
    details: [
      'Tr∆∞·ªõc 1930: Phong tr√†o y√™u n∆∞·ªõc l√¢m v√†o b·∫ø t·∫Øc',
      'C√°c phong tr√†o c≈© ƒë·ªÅu th·∫•t b·∫°i',
      'Thi·∫øu l√Ω lu·∫≠n khoa h·ªçc ch·ªâ ƒë·∫°o',
      'ƒê·∫£ng ra ƒë·ªùi m·ªü ra b∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i'
    ],
    icon: 'üéØ',
    color: 'from-red-500 to-red-700'
  },
  {
    id: 'historical-necessity',
    title: 'K·∫øt qu·∫£ t·∫•t y·∫øu c·ªßa s·ª± ph√°t tri·ªÉn l·ªãch s·ª≠',
    description: 'S·ª± th·ªëng nh·∫•t c·ªßa ba y·∫øu t·ªë: M√°c-L√™nin, phong tr√†o c√¥ng nh√¢n, y√™u n∆∞·ªõc',
    details: [
      'Ch·ªß nghƒ©a M√°c-L√™nin truy·ªÅn b√° v√†o Vi·ªát Nam',
      'Phong tr√†o c√¥ng nh√¢n ph√°t tri·ªÉn m·∫°nh m·∫Ω',
      'Phong tr√†o y√™u n∆∞·ªõc c√≥ truy·ªÅn th·ªëng l√¢u ƒë·ªùi',
      'Vai tr√≤ l√£nh ƒë·∫°o c·ªßa Nguy·ªÖn √Åi Qu·ªëc'
    ],
    quote: 'L√† s·ª± th·ªëng nh·∫•t c·ªßa ba y·∫øu t·ªë: Ch·ªß nghƒ©a M√°c-L√™nin, Phong tr√†o c√¥ng nh√¢n, Phong tr√†o y√™u n∆∞·ªõc Vi·ªát Nam',
    icon: '‚ö°',
    color: 'from-blue-500 to-blue-700'
  },
  {
    id: 'working-class-role',
    title: 'Kh·∫≥ng ƒë·ªãnh vai tr√≤ v√† b·∫£n lƒ©nh c·ªßa giai c·∫•p c√¥ng nh√¢n',
    description: 'Ch·ª©ng t·ªè giai c·∫•p v√¥ s·∫£n Vi·ªát Nam ƒë√£ tr∆∞·ªüng th√†nh v√† ƒë·ªß s·ª©c l√£nh ƒë·∫°o',
    details: [
      'Giai c·∫•p c√¥ng nh√¢n ƒë√£ c√≥ √Ω th·ª©c giai c·∫•p',
      'C√≥ kh·∫£ nƒÉng t·ªï ch·ª©c v√† l√£nh ƒë·∫°o',
      'ƒê·ªß s·ª©c ƒë·∫£m nh·∫≠n s·ª© m·ªánh l·ªãch s·ª≠',
      'Tr·ªü th√†nh l·ª±c l∆∞·ª£ng ti√™n phong c√°ch m·∫°ng'
    ],
    quote: 'Vi·ªác th√†nh l·∫≠p ƒê·∫£ng ch·ª©ng t·ªè r·∫±ng giai c·∫•p v√¥ s·∫£n ta ƒë√£ tr∆∞·ªüng th√†nh v√† ƒë·ªß s·ª©c l√£nh ƒë·∫°o c√°ch m·∫°ng - Ch·ªß t·ªãch H·ªì Ch√≠ Minh',
    icon: 'üí™',
    color: 'from-green-500 to-green-700'
  },
  {
    id: 'revolutionary-thinking',
    title: 'B∆∞·ªõc ngo·∫∑t v·ªÅ t∆∞ duy c√°ch m·∫°ng',
    description: 'C∆∞∆°ng lƒ©nh ch√≠nh tr·ªã ƒë·∫ßu ti√™n mang t√≠nh khoa h·ªçc, ƒë√∫ng ƒë·∫Øn',
    details: [
      'L·∫ßn ƒë·∫ßu c√≥ c∆∞∆°ng lƒ©nh khoa h·ªçc',
      'Ph·∫£n √°nh nhu c·∫ßu c·∫•p b√°ch c·ªßa x√£ h·ªôi',
      'Ph√π h·ª£p xu th·∫ø th·ªùi ƒë·∫°i',
      'V·∫≠n d·ª•ng s√°ng t·∫°o M√°c-L√™nin v√†o Vi·ªát Nam'
    ],
    icon: 'üß†',
    color: 'from-purple-500 to-purple-700'
  },
  {
    id: 'correct-path',
    title: 'X√°c ƒë·ªãnh con ƒë∆∞·ªùng c√°ch m·∫°ng ƒë√∫ng ƒë·∫Øn',
    description: 'Con ƒë∆∞·ªùng c√°ch m·∫°ng v√¥ s·∫£n l√† duy nh·∫•t ƒë√∫ng ƒë·∫Øn cho d√¢n t·ªôc',
    details: [
      'Gi·∫£i ph√≥ng d√¢n t·ªôc',
      'Gi·∫£i ph√≥ng giai c·∫•p',
      'Gi·∫£i ph√≥ng con ng∆∞·ªùi',
      'Ph√π h·ª£p xu th·∫ø th·ªùi ƒë·∫°i m·ªõi'
    ],
    icon: 'üõ§Ô∏è',
    color: 'from-indigo-500 to-indigo-700'
  },
  {
    id: 'great-significance',
    title: '√ù nghƒ©a l·ªãch s·ª≠ to l·ªõn',
    description: 'M·ªü ra k·ª∑ nguy√™n m·ªõi: ƒê·ªôc l·∫≠p d√¢n t·ªôc g·∫Øn li·ªÅn v·ªõi ch·ªß nghƒ©a x√£ h·ªôi',
    details: [
      'ƒê∆∞a c√°ch m·∫°ng Vi·ªát Nam sang th·ªùi k·ª≥ m·ªõi',
      'ƒê·∫∑t n·ªÅn m√≥ng cho m·ªçi th·∫Øng l·ª£i',
      'Tr·ªü th√†nh nh√¢n t·ªë quy·∫øt ƒë·ªãnh',
      'G·∫Øn v·ªõi c√°ch m·∫°ng v√¥ s·∫£n th·∫ø gi·ªõi'
    ],
    icon: 'üåü',
    color: 'from-yellow-500 to-yellow-700'
  }
]

interface HistoricalSignificanceSectionProps {
  onNext: () => void
  onBack: () => void
  onGoToDashboard?: () => void
}

export default function HistoricalSignificanceSection({ onNext, onBack, onGoToDashboard }: HistoricalSignificanceSectionProps) {
  const [selectedSignificance, setSelectedSignificance] = useState<string | null>(null)
  const [currentView, setCurrentView] = useState(0)

  const views = ['T·ªïng quan', 'Chi ti·∫øt', 'K·∫øt lu·∫≠n']

  const renderOverview = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">√ù nghƒ©a l·ªãch s·ª≠ c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng</h2>
        <p className="text-gray-300 text-lg">
          S·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam mang √Ω nghƒ©a l·ªãch s·ª≠ to l·ªõn
        </p>
      </motion.div>

      <div className="grid md:grid-cols-3 gap-6">
        {historicalSignificances.slice(0, 3).map((significance, index) => (
          <motion.div
            key={significance.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.2 }}
            className={`bg-gradient-to-br ${significance.color} rounded-xl p-6 cursor-pointer transform hover:scale-105 transition-all duration-300 ${
              selectedSignificance === significance.id ? 'ring-4 ring-white' : ''
            }`}
            onClick={() => setSelectedSignificance(selectedSignificance === significance.id ? null : significance.id)}
          >
            <div className="text-4xl mb-4">{significance.icon}</div>
            <h3 className="text-xl font-bold text-white mb-2">{significance.title}</h3>
            <p className="text-gray-200 text-sm">{significance.description}</p>
          </motion.div>
        ))}
      </div>

      <div className="grid md:grid-cols-3 gap-6 mt-6">
        {historicalSignificances.slice(3, 6).map((significance, index) => (
          <motion.div
            key={significance.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: (index + 3) * 0.2 }}
            className={`bg-gradient-to-br ${significance.color} rounded-xl p-6 cursor-pointer transform hover:scale-105 transition-all duration-300 ${
              selectedSignificance === significance.id ? 'ring-4 ring-white' : ''
            }`}
            onClick={() => setSelectedSignificance(selectedSignificance === significance.id ? null : significance.id)}
          >
            <div className="text-4xl mb-4">{significance.icon}</div>
            <h3 className="text-xl font-bold text-white mb-2">{significance.title}</h3>
            <p className="text-gray-200 text-sm">{significance.description}</p>
          </motion.div>
        ))}
      </div>
    </div>
  )

  const renderDetails = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">Chi ti·∫øt c√°c √Ω nghƒ©a l·ªãch s·ª≠</h2>
        <p className="text-gray-300 text-lg">
          Ph√¢n t√≠ch s√¢u v·ªÅ t·ª´ng √Ω nghƒ©a c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng
        </p>
      </motion.div>

      <div className="space-y-8">
        {historicalSignificances.map((significance, index) => (
          <motion.div
            key={significance.id}
            initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: index * 0.2 }}
            className={`bg-gradient-to-r ${significance.color} rounded-xl p-6`}
          >
            <div className="flex items-start mb-4">
              <div className="text-4xl mr-4">{significance.icon}</div>
              <div className="flex-1">
                <h3 className="text-2xl font-bold text-white mb-2">{significance.title}</h3>
                <p className="text-gray-200 mb-4">{significance.description}</p>
              </div>
            </div>

            <div className="grid md:grid-cols-2 gap-4 mb-4">
              {significance.details.map((detail, idx) => (
                <motion.div
                  key={idx}
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.2 + idx * 0.1 }}
                  className="bg-black bg-opacity-20 rounded-lg p-3"
                >
                  <div className="flex items-center text-white text-sm">
                    <ChevronRight className="w-4 h-4 mr-2" />
                    {detail}
                  </div>
                </motion.div>
              ))}
            </div>

            {significance.quote && (
              <motion.div
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.2 + 0.5 }}
                className="bg-black bg-opacity-30 rounded-lg p-4 border-l-4 border-white"
              >
                <p className="text-white italic">{significance.quote}</p>
              </motion.div>
            )}
          </motion.div>
        ))}
      </div>
    </div>
  )

  const renderConclusion = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">K·∫øt lu·∫≠n v·ªÅ √Ω nghƒ©a l·ªãch s·ª≠</h2>
        <p className="text-gray-300 text-lg">
          T·ªïng k·∫øt v·ªÅ t·∫ßm quan tr·ªçng c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam
        </p>
      </motion.div>

      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-gradient-to-br from-red-600 to-red-800 rounded-2xl p-8 mb-8"
      >
        <div className="text-center mb-8">
          <div className="text-6xl mb-4">üèõÔ∏è</div>
          <h3 className="text-3xl font-bold text-white mb-4">B∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i</h3>
          <p className="text-gray-200 text-lg">
            Vi·ªác th√†nh l·∫≠p ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam ng√†y 3/2/1930 l√† b∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i nh·∫•t 
            trong l·ªãch s·ª≠ d√¢n t·ªôc Vi·ªát Nam, m·ªü ra k·ª∑ nguy√™n m·ªõi c·ªßa c√°ch m·∫°ng.
          </p>
        </div>
      </motion.div>

      <div className="grid md:grid-cols-2 gap-6">
        <motion.div
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.3 }}
          className="bg-gradient-to-br from-blue-600 to-blue-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üåÖ</div>
          <h3 className="text-xl font-bold text-white mb-4">M·ªü ra k·ª∑ nguy√™n m·ªõi</h3>
          <ul className="text-gray-200 space-y-2">
            <li>‚Ä¢ ƒê·ªôc l·∫≠p d√¢n t·ªôc g·∫Øn li·ªÅn v·ªõi ch·ªß nghƒ©a x√£ h·ªôi</li>
            <li>‚Ä¢ C√°ch m·∫°ng Vi·ªát Nam tr·ªü th√†nh b·ªô ph·∫≠n c·ªßa c√°ch m·∫°ng th·∫ø gi·ªõi</li>
            <li>‚Ä¢ T·ª´ c√°ch m·∫°ng t·ª± ph√°t sang c√°ch m·∫°ng c√≥ t·ªï ch·ª©c</li>
            <li>‚Ä¢ T·ª´ ƒë·∫•u tranh c·ª•c b·ªô sang ƒë·∫•u tranh to√†n qu·ªëc</li>
          </ul>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.5 }}
          className="bg-gradient-to-br from-green-600 to-green-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üèÜ</div>
          <h3 className="text-xl font-bold text-white mb-4">N·ªÅn t·∫£ng th·∫Øng l·ª£i</h3>
          <ul className="text-gray-200 space-y-2">
            <li>‚Ä¢ ƒê·∫∑t n·ªÅn m√≥ng cho C√°ch m·∫°ng Th√°ng T√°m 1945</li>
            <li>‚Ä¢ C∆° s·ªü cho chi·∫øn th·∫Øng ƒêi·ªán Bi√™n Ph·ªß 1954</li>
            <li>‚Ä¢ Ti·ªÅn ƒë·ªÅ cho th·ªëng nh·∫•t ƒë·∫•t n∆∞·ªõc 1975</li>
            <li>‚Ä¢ ƒê·ªãnh h∆∞·ªõng cho c√¥ng cu·ªôc ƒê·ªïi m·ªõi t·ª´ 1986</li>
          </ul>
        </motion.div>
      </div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.7 }}
        className="bg-gradient-to-r from-yellow-500 to-yellow-700 rounded-xl p-8 mt-8"
      >
        <div className="text-center">
          <div className="text-4xl mb-4">üìú</div>
          <h3 className="text-2xl font-bold text-white mb-4">L·ªùi Ch·ªß t·ªãch H·ªì Ch√≠ Minh</h3>
          <blockquote className="text-white text-lg italic mb-4">
          Vi·ªác th√†nh l·∫≠p ƒê·∫£ng l√† m·ªôt b∆∞·ªõc ngo·∫∑t v√¥ c√πng quan tr·ªçng trong l·ªãch s·ª≠ c√°ch m·∫°ng Vi·ªát Nam ta. 
            N√≥ ch·ª©ng t·ªè r·∫±ng giai c·∫•p v√¥ s·∫£n ta ƒë√£ tr∆∞·ªüng th√†nh v√† ƒë·ªß s·ª©c l√£nh ƒë·∫°o c√°ch m·∫°ng.
          </blockquote>
          <p className="text-gray-200">
            ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam kh√¥ng ch·ªâ l√† s·∫£n ph·∫©m c·ªßa l·ªãch s·ª≠ m√† c√≤n l√† ng∆∞·ªùi t·∫°o ra l·ªãch s·ª≠, 
            d·∫´n d·∫Øt d√¢n t·ªôc Vi·ªát Nam t·ª´ th·∫Øng l·ª£i n√†y ƒë·∫øn th·∫Øng l·ª£i kh√°c.
          </p>
        </div>
      </motion.div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.9 }}
        className="bg-gradient-to-r from-purple-600 to-purple-800 rounded-xl p-6"
      >
        <div className="text-center">
          <div className="text-4xl mb-4">üéØ</div>
          <h3 className="text-xl font-bold text-white mb-4">√ù nghƒ©a th·ªùi ƒë·∫°i</h3>
          <p className="text-gray-200 text-lg">
            Vi·ªác th√†nh l·∫≠p ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam kh√¥ng ch·ªâ c√≥ √Ω nghƒ©a ƒë·ªëi v·ªõi Vi·ªát Nam m√† c√≤n 
            g√≥p ph·∫ßn v√†o phong tr√†o gi·∫£i ph√≥ng d√¢n t·ªôc v√† c√°ch m·∫°ng v√¥ s·∫£n th·∫ø gi·ªõi, 
            kh·∫≥ng ƒë·ªãnh s·ª©c m·∫°nh c·ªßa ch·ªß nghƒ©a M√°c-L√™nin trong ƒëi·ªÅu ki·ªán n∆∞·ªõc thu·ªôc ƒë·ªãa.
          </p>
        </div>
      </motion.div>
    </div>
  )

  const renderCurrentView = () => {
    switch (currentView) {
      case 0:
        return renderOverview()
      case 1:
        return renderDetails()
      case 2:
        return renderConclusion()
      default:
        return renderOverview()
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 p-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-8"
        >
          <h1 className="text-4xl md:text-5xl font-bold text-white mb-4">
            √ù nghƒ©a l·ªãch s·ª≠ c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng
          </h1>
          <p className="text-gray-300 text-xl">
            B∆∞·ªõc ngo·∫∑t vƒ© ƒë·∫°i trong l·ªãch s·ª≠ d√¢n t·ªôc Vi·ªát Nam
          </p>
        </motion.div>

        {/* View Selector */}
        <div className="flex justify-center mb-8">
          <div className="flex space-x-4 bg-black bg-opacity-30 rounded-full p-2">
            {views.map((view, index) => (
              <button
                key={index}
                onClick={() => setCurrentView(index)}
                className={`px-6 py-2 rounded-full text-sm font-medium transition-all duration-300 ${
                  currentView === index
                    ? 'bg-purple-600 text-white'
                    : 'text-gray-300 hover:text-white hover:bg-gray-700'
                }`}
              >
                {view}
              </button>
            ))}
          </div>
        </div>

        {/* Content */}
        <AnimatePresence mode="wait">
          <motion.div
            key={currentView}
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            transition={{ duration: 0.3 }}
          >
            {renderCurrentView()}
          </motion.div>
        </AnimatePresence>

        {/* Navigation */}
        <div className="flex justify-between items-center mt-12">
          <div className="flex items-center space-x-4">
            <button
              onClick={onBack}
              className="flex items-center px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-300"
            >
              <ChevronLeft className="w-5 h-5 mr-2" />
              Quay l·∫°i
            </button>
            
            {onGoToDashboard && (
              <button
                onClick={onGoToDashboard}
                className="flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-300"
              >
                üìä B·∫£ng ƒëi·ªÅu khi·ªÉn
              </button>
            )}
          </div>

          <div className="flex space-x-4">
            <button
              onClick={() => setCurrentView(Math.max(0, currentView - 1))}
              disabled={currentView === 0}
              className="px-6 py-3 bg-gray-700 hover:bg-gray-600 disabled:bg-gray-800 disabled:opacity-50 text-white rounded-lg transition-colors duration-300"
            >
              Ph·∫ßn tr∆∞·ªõc
            </button>

            
            {currentView < views.length - 1 ? (
              <button
                onClick={() => setCurrentView(Math.min(views.length - 1, currentView + 1))}
                className="px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white rounded-lg transition-colors duration-300"
              >
                Ph·∫ßn ti·∫øp
              </button>
            ) : (
              <button
                onClick={onNext}
                className="flex items-center px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white rounded-lg transition-colors duration-300"
              >
                Ti·∫øp t·ª•c
                <ChevronRight className="w-5 h-5 ml-2" />
              </button>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}