'use client'

import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Target, TrendingUp, Users, Globe, ChevronRight, ChevronLeft, Star, Award, Lightbulb, Crown, Zap, Factory, BookOpen, Heart } from 'lucide-react'

interface Factor {
  id: string
  title: string
  description: string
  details: string[]
  evidence: string[]
  icon: string
  color: string
}

const inevitabilityFactors: Factor[] = [
  {
    id: 'economic-social',
    title: 'Y·∫øu t·ªë kinh t·∫ø - x√£ h·ªôi',
    description: 'S·ª± ph√°t tri·ªÉn c·ªßa quan h·ªá s·∫£n xu·∫•t t∆∞ b·∫£n ch·ªß nghƒ©a v√† giai c·∫•p c√¥ng nh√¢n',
    details: [
      'Kinh t·∫ø h√†ng h√≥a ph√°t tri·ªÉn m·∫°nh',
      'Giai c·∫•p c√¥ng nh√¢n ra ƒë·ªùi v√† l·ªõn m·∫°nh',
      'M√¢u thu·∫´n giai c·∫•p ng√†y c√†ng gay g·∫Øt',
      'Nhu c·∫ßu c√≥ t·ªï ch·ª©c l√£nh ƒë·∫°o giai c·∫•p'
    ],
    evidence: [
      'NƒÉm 1929: C√≥ kho·∫£ng 221.000 c√¥ng nh√¢n',
      'C√°c cu·ªôc ƒë√¨nh c√¥ng li√™n ti·∫øp di·ªÖn ra',
      'Phong tr√†o c√¥ng nh√¢n c√≥ t·ªï ch·ª©c',
      '√ù th·ª©c giai c·∫•p ƒë∆∞·ª£c n√¢ng cao'
    ],
    icon: 'üè≠',
    color: 'from-blue-500 to-blue-700'
  },
  {
    id: 'political',
    title: 'Y·∫øu t·ªë ch√≠nh tr·ªã',
    description: 'Kh·ªßng ho·∫£ng c·ªßa c√°c t·ªï ch·ª©c ch√≠nh tr·ªã c≈© v√† nhu c·∫ßu ƒë∆∞·ªùng l·ªëi m·ªõi',
    details: [
      'C√°c t·ªï ch·ª©c c≈© ƒë·ªÅu th·∫•t b·∫°i',
      'Phong tr√†o y√™u n∆∞·ªõc l√¢m v√†o b·∫ø t·∫Øc',
      'Thi·∫øu ƒë∆∞·ªùng l·ªëi c√°ch m·∫°ng ƒë√∫ng ƒë·∫Øn',
      'C·∫ßn c√≥ l·ª±c l∆∞·ª£ng l√£nh ƒë·∫°o m·ªõi'
    ],
    evidence: [
      'Vi·ªát Nam Qu·ªëc D√¢n ƒê·∫£ng th·∫•t b·∫°i',
      'C√°c t·ªï ch·ª©c t√¥n gi√°o kh√¥ng hi·ªáu qu·∫£',
      'Phong tr√†o Duy T√¢n kh√¥ng th√†nh c√¥ng',
      'C·∫ßn c√≥ ƒë·∫£ng c√°ch m·∫°ng ch√¢n ch√≠nh'
    ],
    icon: 'üèõÔ∏è',
    color: 'from-red-500 to-red-700'
  },
  {
    id: 'ideological',
    title: 'Y·∫øu t·ªë t∆∞ t∆∞·ªüng',
    description: 'S·ª± truy·ªÅn b√° v√† ti·∫øp nh·∫≠n ch·ªß nghƒ©a M√°c-L√™nin t·∫°i Vi·ªát Nam',
    details: [
      'Ch·ªß nghƒ©a M√°c-L√™nin ƒë∆∞·ª£c truy·ªÅn b√°',
      'T∆∞ t∆∞·ªüng c√°ch m·∫°ng v√¥ s·∫£n lan r·ªông',
      'C√≥ c∆° s·ªü l√Ω lu·∫≠n khoa h·ªçc',
      'Ph√π h·ª£p v·ªõi th·ª±c ti·ªÖn Vi·ªát Nam'
    ],
    evidence: [
      'Nguy·ªÖn √Åi Qu·ªëc nghi√™n c·ª©u M√°c-L√™nin',
      'B√°o ch√≠ c√°ch m·∫°ng ph√°t tri·ªÉn',
      'T∆∞ t∆∞·ªüng ti·∫øn b·ªô ƒë∆∞·ª£c ph·ªï bi·∫øn',
      'L√Ω lu·∫≠n khoa h·ªçc ch·ªâ ƒë·∫°o th·ª±c ti·ªÖn'
    ],
    icon: 'üìö',
    color: 'from-green-500 to-green-700'
  },
  {
    id: 'organizational',
    title: 'Y·∫øu t·ªë t·ªï ch·ª©c',
    description: 'S·ª± chu·∫©n b·ªã v·ªÅ t·ªï ch·ª©c v√† nh√¢n s·ª± cho vi·ªác th√†nh l·∫≠p ƒê·∫£ng',
    details: [
      'C√°c t·ªï ch·ª©c ti·ªÅn th√¢n ƒë∆∞·ª£c th√†nh l·∫≠p',
      'ƒê·ªôi ng≈© c√°n b·ªô ƒë∆∞·ª£c ƒë√†o t·∫°o',
      'Kinh nghi·ªám t·ªï ch·ª©c ƒë∆∞·ª£c t√≠ch l≈©y',
      'M·∫°ng l∆∞·ªõi ho·∫°t ƒë·ªông ƒë∆∞·ª£c h√¨nh th√†nh'
    ],
    evidence: [
      'Thanh ni√™n C√°ch m·∫°ng ƒê·ªìng ch√≠ H·ªôi (1925)',
      'Vi·ªát Nam C√°ch m·∫°ng Thanh ni√™n ƒê·∫£ng (1927)',
      'ƒê√¥ng D∆∞∆°ng C·ªông s·∫£n ƒê·∫£ng (1929)',
      'An Nam C·ªông s·∫£n ƒê·∫£ng (1929)'
    ],
    icon: 'üë•',
    color: 'from-purple-500 to-purple-700'
  },
  {
    id: 'international',
    title: 'Y·∫øu t·ªë qu·ªëc t·∫ø',
    description: '·∫¢nh h∆∞·ªüng c·ªßa c√°ch m·∫°ng th·∫ø gi·ªõi v√† phong tr√†o c·ªông s·∫£n qu·ªëc t·∫ø',
    details: [
      'C√°ch m·∫°ng Th√°ng M∆∞·ªùi Nga th√†nh c√¥ng',
      'Phong tr√†o c·ªông s·∫£n th·∫ø gi·ªõi ph√°t tri·ªÉn',
      'Qu·ªëc t·∫ø C·ªông s·∫£n h·ªó tr·ª£',
      'Xu th·∫ø th·ªùi ƒë·∫°i thu·∫≠n l·ª£i'
    ],
    evidence: [
      'C√°ch m·∫°ng Nga 1917 th·∫Øng l·ª£i',
      'C√°c ƒë·∫£ng c·ªông s·∫£n ch√¢u √Å ra ƒë·ªùi',
      'Qu·ªëc t·∫ø C·ªông s·∫£n ch·ªâ ƒë·∫°o',
      'Phong tr√†o gi·∫£i ph√≥ng d√¢n t·ªôc m·∫°nh m·∫Ω'
    ],
    icon: 'üåç',
    color: 'from-indigo-500 to-indigo-700'
  },
  {
    id: 'leadership',
    title: 'Y·∫øu t·ªë l√£nh ƒë·∫°o',
    description: 'Vai tr√≤ c·ªßa Nguy·ªÖn √Åi Qu·ªëc trong vi·ªác chu·∫©n b·ªã v√† th√†nh l·∫≠p ƒê·∫£ng',
    details: [
      'L√£nh t·ª• c√≥ t·∫ßm nh√¨n chi·∫øn l∆∞·ª£c',
      'K·∫øt h·ª£p l√Ω lu·∫≠n v·ªõi th·ª±c ti·ªÖn',
      'C√≥ uy t√≠n v√† kh·∫£ nƒÉng t·ªï ch·ª©c',
      'ƒê·∫°i di·ªán cho nguy·ªán v·ªçng d√¢n t·ªôc'
    ],
    evidence: [
      'Ho·∫°t ƒë·ªông c√°ch m·∫°ng t·ª´ 1911',
      'Nghi√™n c·ª©u s√¢u ch·ªß nghƒ©a M√°c-L√™nin',
      'Th√†nh l·∫≠p c√°c t·ªï ch·ª©c ti·ªÅn th√¢n',
      'Ch·ªß tr√¨ H·ªôi ngh·ªã th√†nh l·∫≠p ƒê·∫£ng'
    ],
    icon: 'üëë',
    color: 'from-yellow-500 to-yellow-700'
  }
]

interface InevitabilitySectionProps {
  onNext: () => void
  onBack: () => void
  onGoToDashboard?: () => void
}

export default function InevitabilitySection({ onNext, onBack, onGoToDashboard }: InevitabilitySectionProps) {
  const [selectedFactor, setSelectedFactor] = useState<string | null>(null)
  const [currentView, setCurrentView] = useState(0)

  const views = ['T·ªïng quan', 'Ph√¢n t√≠ch', 'Ch·ª©ng minh', 'K·∫øt lu·∫≠n']

  const renderOverview = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">T√≠nh t·∫•t y·∫øu c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng</h2>
        <p className="text-gray-300 text-lg">
          S·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam l√† k·∫øt qu·∫£ t·∫•t y·∫øu c·ªßa s·ª± ph√°t tri·ªÉn l·ªãch s·ª≠
        </p>
      </motion.div>

      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-gradient-to-r from-red-600 to-red-800 rounded-2xl p-8 mb-8"
      >
        <div className="text-center">
          <div className="text-6xl mb-4">‚ö°</div>
          <h3 className="text-2xl font-bold text-white mb-4">T√≠nh t·∫•t y·∫øu kh√°ch quan</h3>
          <p className="text-gray-200 text-lg">
            Vi·ªác th√†nh l·∫≠p ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam kh√¥ng ph·∫£i l√† ng·∫´u nhi√™n m√† l√† k·∫øt qu·∫£ t·∫•t y·∫øu 
            c·ªßa s·ª± ph√°t tri·ªÉn kinh t·∫ø-x√£ h·ªôi, ch√≠nh tr·ªã, t∆∞ t∆∞·ªüng v√† c√°c y·∫øu t·ªë kh√°ch quan kh√°c.
          </p>
        </div>
      </motion.div>

      <div className="grid md:grid-cols-3 gap-6">
        {inevitabilityFactors.slice(0, 3).map((factor, index) => (
          <motion.div
            key={factor.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.2 }}
            className={`bg-gradient-to-br ${factor.color} rounded-xl p-6 cursor-pointer transform hover:scale-105 transition-all duration-300 ${
              selectedFactor === factor.id ? 'ring-4 ring-white' : ''
            }`}
            onClick={() => setSelectedFactor(selectedFactor === factor.id ? null : factor.id)}
          >
            <div className="text-4xl mb-4">{factor.icon}</div>
            <h3 className="text-xl font-bold text-white mb-2">{factor.title}</h3>
            <p className="text-gray-200 text-sm">{factor.description}</p>
          </motion.div>
        ))}
      </div>

      <div className="grid md:grid-cols-3 gap-6 mt-6">
        {inevitabilityFactors.slice(3, 6).map((factor, index) => (
          <motion.div
            key={factor.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: (index + 3) * 0.2 }}
            className={`bg-gradient-to-br ${factor.color} rounded-xl p-6 cursor-pointer transform hover:scale-105 transition-all duration-300 ${
              selectedFactor === factor.id ? 'ring-4 ring-white' : ''
            }`}
            onClick={() => setSelectedFactor(selectedFactor === factor.id ? null : factor.id)}
          >
            <div className="text-4xl mb-4">{factor.icon}</div>
            <h3 className="text-xl font-bold text-white mb-2">{factor.title}</h3>
            <p className="text-gray-200 text-sm">{factor.description}</p>
          </motion.div>
        ))}
      </div>
    </div>
  )

  const renderAnalysis = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">Ph√¢n t√≠ch c√°c y·∫øu t·ªë t·∫•t y·∫øu</h2>
        <p className="text-gray-300 text-lg">
          Xem x√©t chi ti·∫øt t·ª´ng y·∫øu t·ªë g√≥p ph·∫ßn t·∫°o n√™n t√≠nh t·∫•t y·∫øu
        </p>
      </motion.div>

      <div className="space-y-8">
        {inevitabilityFactors.map((factor, index) => (
          <motion.div
            key={factor.id}
            initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: index * 0.2 }}
            className={`bg-gradient-to-r ${factor.color} rounded-xl p-6`}
          >
            <div className="flex items-start mb-4">
              <div className="text-4xl mr-4">{factor.icon}</div>
              <div className="flex-1">
                <h3 className="text-2xl font-bold text-white mb-2">{factor.title}</h3>
                <p className="text-gray-200 mb-4">{factor.description}</p>
              </div>
            </div>

            <div className="grid md:grid-cols-2 gap-6">
              <div>
                <h4 className="text-lg font-bold text-white mb-3">N·ªôi dung ch√≠nh:</h4>
                <div className="space-y-2">
                  {factor.details.map((detail, idx) => (
                    <motion.div
                      key={idx}
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.2 + idx * 0.1 }}
                      className="bg-black bg-opacity-20 rounded-lg p-3"
                    >
                      <div className="flex items-center text-white text-sm">
                        <ChevronRight className="w-4 h-4 mr-2" />
                        {detail}
                      </div>
                    </motion.div>
                  ))}
                </div>
              </div>

              <div>
                <h4 className="text-lg font-bold text-white mb-3">B·∫±ng ch·ª©ng c·ª• th·ªÉ:</h4>
                <div className="space-y-2">
                  {factor.evidence.map((evidence, idx) => (
                    <motion.div
                      key={idx}
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.2 + idx * 0.1 + 0.2 }}
                      className="bg-black bg-opacity-30 rounded-lg p-3"
                    >
                      <div className="flex items-center text-white text-sm">
                        <Star className="w-4 h-4 mr-2" />
                        {evidence}
                      </div>
                    </motion.div>
                  ))}
                </div>
              </div>
            </div>
          </motion.div>
        ))}
      </div>
    </div>
  )

  const renderProof = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">Ch·ª©ng minh t√≠nh t·∫•t y·∫øu</h2>
        <p className="text-gray-300 text-lg">
          Lu·∫≠n ch·ª©ng khoa h·ªçc v·ªÅ t√≠nh t·∫•t y·∫øu kh√°ch quan
        </p>
      </motion.div>

      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-gradient-to-br from-purple-600 to-purple-800 rounded-2xl p-8 mb-8"
      >
        <div className="text-center mb-6">
          <div className="text-6xl mb-4">üî¨</div>
          <h3 className="text-3xl font-bold text-white mb-4">Lu·∫≠n ch·ª©ng khoa h·ªçc</h3>
        </div>

        <div className="grid md:grid-cols-2 gap-8">
          <div className="space-y-4">
            <h4 className="text-xl font-bold text-white mb-4">ƒêi·ªÅu ki·ªán kh√°ch quan:</h4>
            <div className="space-y-3">
              <div className="bg-black bg-opacity-30 rounded-lg p-4">
                <h5 className="font-bold text-white mb-2">1. C∆° s·ªü kinh t·∫ø</h5>
                <p className="text-gray-200 text-sm">
                  S·ª± ph√°t tri·ªÉn c·ªßa kinh t·∫ø h√†ng h√≥a t∆∞ b·∫£n ch·ªß nghƒ©a t·∫°o ra giai c·∫•p c√¥ng nh√¢n - 
                  l·ª±c l∆∞·ª£ng x√£ h·ªôi ti√™n ti·∫øn nh·∫•t, c√≥ s·ª© m·ªánh l·ªãch s·ª≠ gi·∫£i ph√≥ng giai c·∫•p v√† d√¢n t·ªôc.
                </p>
              </div>
              <div className="bg-black bg-opacity-30 rounded-lg p-4">
                <h5 className="font-bold text-white mb-2">2. M√¢u thu·∫´n x√£ h·ªôi</h5>
                <p className="text-gray-200 text-sm">
                  M√¢u thu·∫´n gay g·∫Øt gi·ªØa giai c·∫•p c√¥ng nh√¢n v·ªõi giai c·∫•p t∆∞ s·∫£n, 
                  gi·ªØa d√¢n t·ªôc b·ªã √°p b·ª©c v·ªõi ch·ªß nghƒ©a ƒë·∫ø qu·ªëc ƒë√≤i h·ªèi c√≥ t·ªï ch·ª©c l√£nh ƒë·∫°o.
                </p>
              </div>
              <div className="bg-black bg-opacity-30 rounded-lg p-4">
                <h5 className="font-bold text-white mb-2">3. Kh·ªßng ho·∫£ng ch√≠nh tr·ªã</h5>
                <p className="text-gray-200 text-sm">
                  C√°c t·ªï ch·ª©c ch√≠nh tr·ªã c≈© ƒë·ªÅu th·∫•t b·∫°i, phong tr√†o y√™u n∆∞·ªõc l√¢m v√†o b·∫ø t·∫Øc, 
                  c·∫ßn c√≥ ƒë∆∞·ªùng l·ªëi c√°ch m·∫°ng m·ªõi.
                </p>
              </div>
            </div>
          </div>

          <div className="space-y-4">
            <h4 className="text-xl font-bold text-white mb-4">ƒêi·ªÅu ki·ªán ch·ªß quan:</h4>
            <div className="space-y-3">
              <div className="bg-black bg-opacity-30 rounded-lg p-4">
                <h5 className="font-bold text-white mb-2">1. L√Ω lu·∫≠n khoa h·ªçc</h5>
                <p className="text-gray-200 text-sm">
                  Ch·ªß nghƒ©a M√°c-L√™nin ƒë∆∞·ª£c truy·ªÅn b√° v√† ti·∫øp nh·∫≠n, 
                  cung c·∫•p c∆° s·ªü l√Ω lu·∫≠n khoa h·ªçc cho c√°ch m·∫°ng Vi·ªát Nam.
                </p>
              </div>
              <div className="bg-black bg-opacity-30 rounded-lg p-4">
                <h5 className="font-bold text-white mb-2">2. T·ªï ch·ª©c chu·∫©n b·ªã</h5>
                <p className="text-gray-200 text-sm">
                  C√°c t·ªï ch·ª©c ti·ªÅn th√¢n ƒë∆∞·ª£c th√†nh l·∫≠p, ƒë·ªôi ng≈© c√°n b·ªô ƒë∆∞·ª£c ƒë√†o t·∫°o, 
                  kinh nghi·ªám t·ªï ch·ª©c ƒë∆∞·ª£c t√≠ch l≈©y.
                </p>
              </div>
              <div className="bg-black bg-opacity-30 rounded-lg p-4">
                <h5 className="font-bold text-white mb-2">3. L√£nh t·ª• xu·∫•t s·∫Øc</h5>
                <p className="text-gray-200 text-sm">
                  Nguy·ªÖn √Åi Qu·ªëc - ng∆∞·ªùi l√£nh t·ª• c√≥ t·∫ßm nh√¨n chi·∫øn l∆∞·ª£c, 
                  k·∫øt h·ª£p l√Ω lu·∫≠n v·ªõi th·ª±c ti·ªÖn, c√≥ uy t√≠n v√† kh·∫£ nƒÉng t·ªï ch·ª©c.
                </p>
              </div>
            </div>
          </div>
        </div>
      </motion.div>

      <div className="grid md:grid-cols-3 gap-6">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.3 }}
          className="bg-gradient-to-br from-red-600 to-red-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üìä</div>
          <h3 className="text-xl font-bold text-white mb-4">Quy lu·∫≠t l·ªãch s·ª≠</h3>
          <p className="text-gray-200 text-sm">
            S·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng tu√¢n theo quy lu·∫≠t kh√°ch quan c·ªßa s·ª± ph√°t tri·ªÉn x√£ h·ªôi, 
            l√† k·∫øt qu·∫£ t·∫•t y·∫øu c·ªßa qu√° tr√¨nh ƒë·∫•u tranh giai c·∫•p v√† gi·∫£i ph√≥ng d√¢n t·ªôc.
          </p>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.5 }}
          className="bg-gradient-to-br from-blue-600 to-blue-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üîó</div>
          <h3 className="text-xl font-bold text-white mb-4">S·ª± th·ªëng nh·∫•t</h3>
          <p className="text-gray-200 text-sm">
            S·ª± th·ªëng nh·∫•t gi·ªØa ch·ªß nghƒ©a M√°c-L√™nin, phong tr√†o c√¥ng nh√¢n v√† phong tr√†o y√™u n∆∞·ªõc 
            t·∫°o n√™n t√≠nh t·∫•t y·∫øu kh√°ch quan c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng.
          </p>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.7 }}
          className="bg-gradient-to-br from-green-600 to-green-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">‚è∞</div>
          <h3 className="text-xl font-bold text-white mb-4">Th·ªùi c∆° l·ªãch s·ª≠</h3>
          <p className="text-gray-200 text-sm">
            NƒÉm 1930 l√† th·ªùi ƒëi·ªÉm ch√≠n mu·ªìi nh·∫•t cho vi·ªác th√†nh l·∫≠p ƒê·∫£ng, 
            khi m·ªçi ƒëi·ªÅu ki·ªán kh√°ch quan v√† ch·ªß quan ƒë·ªÅu ƒë√£ s·∫µn s√†ng.
          </p>
        </motion.div>
      </div>
    </div>
  )

  const renderConclusion = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">K·∫øt lu·∫≠n v·ªÅ t√≠nh t·∫•t y·∫øu</h2>
        <p className="text-gray-300 text-lg">
          Kh·∫≥ng ƒë·ªãnh t√≠nh t·∫•t y·∫øu kh√°ch quan c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam
        </p>
      </motion.div>

      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-gradient-to-br from-yellow-600 to-yellow-800 rounded-2xl p-8 mb-8"
      >
        <div className="text-center">
          <div className="text-6xl mb-4">üéØ</div>
          <h3 className="text-3xl font-bold text-white mb-4">K·∫øt lu·∫≠n t·ªïng qu√°t</h3>
          <p className="text-gray-200 text-lg mb-6">
            Vi·ªác th√†nh l·∫≠p ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam ng√†y 3/2/1930 kh√¥ng ph·∫£i l√† ng·∫´u nhi√™n 
            m√† l√† k·∫øt qu·∫£ t·∫•t y·∫øu c·ªßa s·ª± ph√°t tri·ªÉn l·ªãch s·ª≠, l√† s·∫£n ph·∫©m c·ªßa s·ª± k·∫øt h·ª£p 
            gi·ªØa ch·ªß nghƒ©a M√°c-L√™nin v·ªõi phong tr√†o c√¥ng nh√¢n v√† phong tr√†o y√™u n∆∞·ªõc Vi·ªát Nam.
          </p>
          
          <div className="bg-black bg-opacity-30 rounded-lg p-6">
            <h4 className="text-xl font-bold text-white mb-4">C√¥ng th·ª©c t·∫•t y·∫øu:</h4>
            <div className="flex items-center justify-center space-x-4 text-white text-lg">
              <span className="bg-red-600 px-4 py-2 rounded-lg">M√°c-L√™nin</span>
              <span className="text-2xl">+</span>
              <span className="bg-blue-600 px-4 py-2 rounded-lg">Phong tr√†o c√¥ng nh√¢n</span>
              <span className="text-2xl">+</span>
              <span className="bg-green-600 px-4 py-2 rounded-lg">Phong tr√†o y√™u n∆∞·ªõc</span>
              <span className="text-2xl">=</span>
              <span className="bg-yellow-600 px-4 py-2 rounded-lg font-bold">ƒê·∫¢NG C·ªòNG S·∫¢N VI·ªÜT NAM</span>
            </div>
          </div>
        </div>
      </motion.div>

      <div className="grid md:grid-cols-2 gap-6">
        <motion.div
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.3 }}
          className="bg-gradient-to-br from-purple-600 to-purple-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üèõÔ∏è</div>
          <h3 className="text-xl font-bold text-white mb-4">T√≠nh t·∫•t y·∫øu kh√°ch quan</h3>
          <ul className="text-gray-200 space-y-2 text-sm">
            <li>‚Ä¢ Quy lu·∫≠t ph√°t tri·ªÉn c·ªßa x√£ h·ªôi lo√†i ng∆∞·ªùi</li>
            <li>‚Ä¢ M√¢u thu·∫´n giai c·∫•p v√† d√¢n t·ªôc gay g·∫Øt</li>
            <li>‚Ä¢ Nhu c·∫ßu c√≥ t·ªï ch·ª©c l√£nh ƒë·∫°o c√°ch m·∫°ng</li>
            <li>‚Ä¢ Xu th·∫ø th·ªùi ƒë·∫°i v√† c√°ch m·∫°ng th·∫ø gi·ªõi</li>
          </ul>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.5 }}
          className="bg-gradient-to-br from-indigo-600 to-indigo-800 rounded-xl p-6"
        >
          <div className="text-4xl mb-4">üë•</div>
          <h3 className="text-xl font-bold text-white mb-4">T√≠nh t·∫•t y·∫øu ch·ªß quan</h3>
          <ul className="text-gray-200 space-y-2 text-sm">
            <li>‚Ä¢ S·ª± tr∆∞·ªüng th√†nh c·ªßa giai c·∫•p c√¥ng nh√¢n</li>
            <li>‚Ä¢ Ti·∫øp nh·∫≠n ch·ªß nghƒ©a M√°c-L√™nin</li>
            <li>‚Ä¢ Chu·∫©n b·ªã v·ªÅ t·ªï ch·ª©c v√† nh√¢n s·ª±</li>
            <li>‚Ä¢ Vai tr√≤ l√£nh ƒë·∫°o c·ªßa Nguy·ªÖn √Åi Qu·ªëc</li>
          </ul>
        </motion.div>
      </div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.7 }}
        className="bg-gradient-to-r from-red-600 to-red-800 rounded-xl p-8"
      >
        <div className="text-center">
          <div className="text-4xl mb-4">üìú</div>
          <h3 className="text-2xl font-bold text-white mb-4">L·ªùi kh·∫≥ng ƒë·ªãnh c·ªßa l·ªãch s·ª≠</h3>
          <blockquote className="text-white text-lg italic mb-4">
            Vi·ªác th√†nh l·∫≠p ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam l√† m·ªôt t·∫•t y·∫øu l·ªãch s·ª≠. 
            N√≥ l√† k·∫øt qu·∫£ c·ªßa s·ª± ph√°t tri·ªÉn kinh t·∫ø-x√£ h·ªôi, ch√≠nh tr·ªã, t∆∞ t∆∞·ªüng 
            v√† s·ª± k·∫øt h·ª£p s√°ng t·∫°o gi·ªØa ch·ªß nghƒ©a M√°c-L√™nin v·ªõi th·ª±c ti·ªÖn c√°ch m·∫°ng Vi·ªát Nam.
          </blockquote>
          <p className="text-gray-200">
            L·ªãch s·ª≠ ƒë√£ ch·ª©ng minh r·∫±ng s·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng l√† ƒëi·ªÅu t·∫•t y·∫øu, 
            v√† ƒê·∫£ng ƒë√£ ho√†n th√†nh xu·∫•t s·∫Øc s·ª© m·ªánh l·ªãch s·ª≠ c·ªßa m√¨nh.
          </p>
        </div>
      </motion.div>
    </div>
  )

  const renderCurrentView = () => {
    switch (currentView) {
      case 0:
        return renderOverview()
      case 1:
        return renderAnalysis()
      case 2:
        return renderProof()
      case 3:
        return renderConclusion()
      default:
        return renderOverview()
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-red-900 to-gray-900 p-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-8"
        >
          <h1 className="text-4xl md:text-5xl font-bold text-white mb-4">
            T√≠nh t·∫•t y·∫øu c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng
          </h1>
          <p className="text-gray-300 text-xl">
            Ch·ª©ng minh khoa h·ªçc v·ªÅ t√≠nh t·∫•t y·∫øu kh√°ch quan
          </p>
        </motion.div>

        {/* View Selector */}
        <div className="flex justify-center mb-8">
          <div className="flex space-x-4 bg-black bg-opacity-30 rounded-full p-2">
            {views.map((view, index) => (
              <button
                key={index}
                onClick={() => setCurrentView(index)}
                className={`px-6 py-2 rounded-full text-sm font-medium transition-all duration-300 ${
                  currentView === index
                    ? 'bg-red-600 text-white'
                    : 'text-gray-300 hover:text-white hover:bg-gray-700'
                }`}
              >
                {view}
              </button>
            ))}
          </div>
        </div>

        {/* Content */}
        <AnimatePresence mode="wait">
          <motion.div
            key={currentView}
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            transition={{ duration: 0.3 }}
          >
            {renderCurrentView()}
          </motion.div>
        </AnimatePresence>

        {/* Navigation */}
        <div className="flex justify-between items-center mt-12">
          <div className="flex items-center space-x-4">
            <button
              onClick={onBack}
              className="flex items-center px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-300"
            >
              <ChevronLeft className="w-5 h-5 mr-2" />
              Quay l·∫°i
            </button>
            
            {onGoToDashboard && (
              <button
                onClick={onGoToDashboard}
                className="flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-300"
              >
                üìä B·∫£ng ƒëi·ªÅu khi·ªÉn
              </button>
            )}
          </div>

          <div className="flex space-x-4">
            <button
              onClick={() => setCurrentView(Math.max(0, currentView - 1))}
              disabled={currentView === 0}
              className="px-6 py-3 bg-gray-700 hover:bg-gray-600 disabled:bg-gray-800 disabled:opacity-50 text-white rounded-lg transition-colors duration-300"
            >
              Ph·∫ßn tr∆∞·ªõc
            </button>
            
            {currentView < views.length - 1 ? (
              <button
                onClick={() => setCurrentView(Math.min(views.length - 1, currentView + 1))}
                className="px-6 py-3 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors duration-300"
              >
                Ph·∫ßn ti·∫øp
              </button>
            ) : (
              <button
                onClick={onNext}
                className="flex items-center px-6 py-3 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors duration-300"
              >
                Ti·∫øp t·ª•c
                <ChevronRight className="w-5 h-5 ml-2" />
              </button>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}