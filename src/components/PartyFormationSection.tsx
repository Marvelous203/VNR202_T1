'use client'

import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Calendar, Users, MapPin, Star, ChevronRight, ChevronLeft, BookOpen, Target } from 'lucide-react'

interface HistoricalContext {
  id: string
  title: string
  description: string
  details: string[]
  icon: string
  color: string
}

interface PredecessorOrg {
  id: string
  name: string
  foundedDate: string
  founder: string
  location: string
  description: string
  color: string
}

const historicalContexts: HistoricalContext[] = [
  {
    id: 'economic-crisis',
    title: 'Kh·ªßng ho·∫£ng kinh t·∫ø th·∫ø gi·ªõi 1929-1933',
    description: '·∫¢nh h∆∞·ªüng nghi√™m tr·ªçng ƒë·∫øn ƒê√¥ng D∆∞∆°ng',
    details: [
      'L√†m gia tƒÉng m√¢u thu·∫´n x√£ h·ªôi',
      'T√¨nh tr·∫°ng th·∫•t nghi·ªáp gia tƒÉng',
      'Gi√° c·∫£ h√†ng h√≥a gi·∫£m m·∫°nh',
      'N√¥ng d√¢n ph√° s·∫£n h√†ng lo·∫°t'
    ],
    icon: 'üìâ',
    color: 'from-red-500 to-red-700'
  },
  {
    id: 'revolutionary-movement',
    title: 'Phong tr√†o c√°ch m·∫°ng trong n∆∞·ªõc',
    description: 'C√°c t·ªï ch·ª©c c·ªông s·∫£n ƒë·ªãa ph∆∞∆°ng ph√°t tri·ªÉn m·∫°nh m·∫Ω',
    details: [
      'Thi·∫øu s·ª± th·ªëng nh·∫•t trong t·ªï ch·ª©c',
      'C·∫ßn c√≥ s·ª± l√£nh ƒë·∫°o t·∫≠p trung',
      'Phong tr√†o c√¥ng nh√¢n ng√†y c√†ng m·∫°nh',
      '√ù th·ª©c giai c·∫•p ƒë∆∞·ª£c n√¢ng cao'
    ],
    icon: '‚úä',
    color: 'from-orange-500 to-orange-700'
  },
  {
    id: 'world-trend',
    title: 'Xu th·∫ø c√°ch m·∫°ng th·∫ø gi·ªõi',
    description: '·∫¢nh h∆∞·ªüng c·ªßa C√°ch m·∫°ng Th√°ng M∆∞·ªùi Nga',
    details: [
      'Phong tr√†o c·ªông s·∫£n qu·ªëc t·∫ø ph√°t tri·ªÉn',
      'Ch·ªß nghƒ©a M√°c-L√™nin lan r·ªông',
      'C√°c n∆∞·ªõc thu·ªôc ƒë·ªãa ƒë·∫•u tranh gi·∫£i ph√≥ng',
      'Xu th·∫ø gi·∫£i ph√≥ng d√¢n t·ªôc m·∫°nh m·∫Ω'
    ],
    icon: 'üåç',
    color: 'from-blue-500 to-blue-700'
  }
]

const predecessorOrgs: PredecessorOrg[] = [
  {
    id: 'dong-duong-cong-san-dang',
    name: 'ƒê√¥ng D∆∞∆°ng C·ªông s·∫£n ƒê·∫£ng',
    foundedDate: 'Th√°ng 6/1929',
    founder: 'Tr·∫ßn Ph√∫',
    location: 'H√† N·ªôi',
    description: 'T·ªï ch·ª©c c·ªông s·∫£n ƒë·∫ßu ti√™n t·∫°i B·∫Øc K·ª≥, c√≥ ·∫£nh h∆∞·ªüng m·∫°nh trong phong tr√†o c√¥ng nh√¢n',
    color: 'from-green-500 to-green-700'
  },
  {
    id: 'an-nam-cong-san-dang',
    name: 'An Nam C·ªông s·∫£n ƒê·∫£ng',
    foundedDate: 'NƒÉm 1929',
    founder: 'H·ªì T√πng M·∫≠u',
    location: 'Trung K·ª≥',
    description: 'Ho·∫°t ƒë·ªông ch·ªß y·∫øu ·ªü mi·ªÅn Trung, t·∫≠p h·ª£p nhi·ªÅu tr√≠ th·ª©c y√™u n∆∞·ªõc',
    color: 'from-purple-500 to-purple-700'
  },
  {
    id: 'dong-duong-cong-san-lien-doan',
    name: 'ƒê√¥ng D∆∞∆°ng C·ªông s·∫£n Li√™n ƒëo√†n',
    foundedDate: 'NƒÉm 1929',
    founder: 'Nguy·ªÖn √Åi Qu·ªëc ch·ªâ ƒë·∫°o',
    location: 'Nam K·ª≥',
    description: 'ƒê∆∞·ª£c th√†nh l·∫≠p d∆∞·ªõi s·ª± ch·ªâ ƒë·∫°o tr·ª±c ti·∫øp c·ªßa Nguy·ªÖn √Åi Qu·ªëc',
    color: 'from-red-500 to-red-700'
  }
]

interface PartyFormationSectionProps {
  onNext: () => void
  onBack: () => void
  onGoToDashboard?: () => void
}

export default function PartyFormationSection({ onNext, onBack, onGoToDashboard }: PartyFormationSectionProps) {
  const [currentStep, setCurrentStep] = useState(0)
  const [selectedContext, setSelectedContext] = useState<string | null>(null)
  const [selectedOrg, setSelectedOrg] = useState<string | null>(null)

  // Scroll to top when currentStep changes
  useEffect(() => {
    window.scrollTo({ top: 0, behavior: 'smooth' })
  }, [currentStep])

  const steps = [
    'B·ªëi c·∫£nh l·ªãch s·ª≠',
    'C√°c t·ªï ch·ª©c ti·ªÅn th√¢n',
    'H·ªôi ngh·ªã th·ªëng nh·∫•t',
    '√ù nghƒ©a l·ªãch s·ª≠'
  ]

  const renderHistoricalContext = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">B·ªëi c·∫£nh l·ªãch s·ª≠ tr∆∞·ªõc nƒÉm 1930</h2>
        <p className="text-gray-300 text-lg">
          Nh·ªØng y·∫øu t·ªë l·ªãch s·ª≠ t·∫°o ƒëi·ªÅu ki·ªán cho s·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam
        </p>
      </motion.div>

      <div className="grid md:grid-cols-3 gap-6">
        {historicalContexts.map((context, index) => (
          <motion.div
            key={context.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.2 }}
            className={`bg-gradient-to-br ${context.color} rounded-xl p-6 cursor-pointer transform hover:scale-105 transition-all duration-300 ${
              selectedContext === context.id ? 'ring-4 ring-white' : ''
            }`}
            onClick={() => setSelectedContext(selectedContext === context.id ? null : context.id)}
          >
            <div className="text-4xl mb-4">{context.icon}</div>
            <h3 className="text-xl font-bold text-white mb-2">{context.title}</h3>
            <p className="text-gray-200 text-sm mb-4">{context.description}</p>
            
            <AnimatePresence>
              {selectedContext === context.id && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                  className="mt-4 space-y-2"
                >
                  {context.details.map((detail, idx) => (
                    <motion.div
                      key={idx}
                      initial={{ opacity: 0, x: -20 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: idx * 0.1 }}
                      className="flex items-center text-white text-sm"
                    >
                      <ChevronRight className="w-4 h-4 mr-2" />
                      {detail}
                    </motion.div>
                  ))}
                </motion.div>
              )}
            </AnimatePresence>
          </motion.div>
        ))}
      </div>
    </div>
  )

  const renderPredecessorOrgs = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">C√°c t·ªï ch·ª©c ti·ªÅn th√¢n</h2>
        <p className="text-gray-300 text-lg">
          Ba t·ªï ch·ª©c c·ªông s·∫£n ƒë·ªãa ph∆∞∆°ng ƒë∆∞·ª£c th√†nh l·∫≠p tr∆∞·ªõc khi th·ªëng nh·∫•t th√†nh ƒê·∫£ng
        </p>
      </motion.div>

      <div className="space-y-6">
        {predecessorOrgs.map((org, index) => (
          <motion.div
            key={org.id}
            initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: index * 0.3 }}
            className={`bg-gradient-to-r ${org.color} rounded-xl p-6 cursor-pointer transform hover:scale-105 transition-all duration-300 ${
              selectedOrg === org.id ? 'ring-4 ring-white' : ''
            }`}
            onClick={() => setSelectedOrg(selectedOrg === org.id ? null : org.id)}
          >
            <div className="flex items-start justify-between">
              <div className="flex-1">
                <h3 className="text-2xl font-bold text-white mb-2">{org.name}</h3>
                <div className="grid md:grid-cols-3 gap-4 mb-4">
                  <div className="flex items-center text-gray-200">
                    <Calendar className="w-4 h-4 mr-2" />
                    {org.foundedDate}
                  </div>
                  <div className="flex items-center text-gray-200">
                    <Users className="w-4 h-4 mr-2" />
                    {org.founder}
                  </div>
                  <div className="flex items-center text-gray-200">
                    <MapPin className="w-4 h-4 mr-2" />
                    {org.location}
                  </div>
                </div>
              </div>
            </div>
            
            <AnimatePresence>
              {selectedOrg === org.id && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                  className="mt-4 p-4 bg-black bg-opacity-20 rounded-lg"
                >
                  <p className="text-white">{org.description}</p>
                </motion.div>
              )}
            </AnimatePresence>
          </motion.div>
        ))}
      </div>
    </div>
  )

  const renderUnificationConference = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">H·ªôi ngh·ªã th·ªëng nh·∫•t (3/2/1930)</h2>
        <p className="text-gray-300 text-lg">
          S·ª± ki·ªán l·ªãch s·ª≠ ƒë√°nh d·∫•u s·ª± ra ƒë·ªùi c·ªßa ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam
        </p>
      </motion.div>

      <div className="max-w-4xl mx-auto">
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          className="bg-gradient-to-br from-red-600 to-red-800 rounded-2xl p-8 mb-8"
        >
          <div className="text-center mb-8">
            <div className="text-6xl mb-4">üèõÔ∏è</div>
            <h3 className="text-2xl font-bold text-white mb-4">H·ªôi ngh·ªã C·ª≠u Long</h3>
            <div className="grid md:grid-cols-2 gap-6">
              <div className="bg-black bg-opacity-20 rounded-lg p-4">
                <div className="flex items-center mb-2">
                  <MapPin className="w-5 h-5 mr-2 text-white" />
                  <span className="text-white font-semibold">ƒê·ªãa ƒëi·ªÉm</span>
                </div>
                <p className="text-gray-200">C·ª≠u Long, H∆∞∆°ng C·∫£ng (Hong Kong)</p>
              </div>
              <div className="bg-black bg-opacity-20 rounded-lg p-4">
                <div className="flex items-center mb-2">
                  <Users className="w-5 h-5 mr-2 text-white" />
                  <span className="text-white font-semibold">Ch·ªß t·ªça</span>
                </div>
                <p className="text-gray-200">Nguy·ªÖn √Åi Qu·ªëc</p>
              </div>
            </div>
          </div>

          <div className="space-y-6">
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.3 }}
              className="bg-black bg-opacity-20 rounded-lg p-6"
            >
              <h4 className="text-xl font-bold text-white mb-4 flex items-center">
                <Target className="w-5 h-5 mr-2" />
                K·∫øt qu·∫£
              </h4>
              <p className="text-gray-200 text-lg">
                Th·ªëng nh·∫•t ba t·ªï ch·ª©c th√†nh <strong className="text-white">ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam</strong>
              </p>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.5 }}
              className="bg-black bg-opacity-20 rounded-lg p-6"
            >
              <h4 className="text-xl font-bold text-white mb-4 flex items-center">
                <Star className="w-5 h-5 mr-2" />
                √ù nghƒ©a
              </h4>
              <p className="text-gray-200 text-lg">
                ƒê√°nh d·∫•u s·ª± ra ƒë·ªùi ch√≠nh th·ª©c c·ªßa ƒë·∫£ng c√°ch m·∫°ng c·ªßa giai c·∫•p c√¥ng nh√¢n Vi·ªát Nam
              </p>
            </motion.div>
          </div>
        </motion.div>
      </div>
    </div>
  )

  const renderHistoricalSignificance = () => (
    <div className="space-y-6">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <h2 className="text-3xl font-bold text-white mb-4">√ù nghƒ©a l·ªãch s·ª≠</h2>
        <p className="text-gray-300 text-lg">
          T·∫ßm quan tr·ªçng c·ªßa vi·ªác th√†nh l·∫≠p ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam
        </p>
      </motion.div>

      <div className="grid md:grid-cols-2 gap-6">
        {[
          {
            title: 'Ch·∫•m d·ª©t kh·ªßng ho·∫£ng ƒë∆∞·ªùng l·ªëi',
            description: 'K·∫øt th√∫c t√¨nh tr·∫°ng thi·∫øu ƒë∆∞·ªùng l·ªëi c·ª©u n∆∞·ªõc ƒë√∫ng ƒë·∫Øn',
            icon: 'üéØ',
            color: 'from-blue-500 to-blue-700'
          },
          {
            title: 'M·ªü ra b∆∞·ªõc ngo·∫∑t l·ªãch s·ª≠',
            description: 'ƒê∆∞a c√°ch m·∫°ng Vi·ªát Nam sang th·ªùi k·ª≥ m·ªõi',
            icon: 'üåü',
            color: 'from-green-500 to-green-700'
          },
          {
            title: 'Kh·∫≥ng ƒë·ªãnh vai tr√≤ giai c·∫•p c√¥ng nh√¢n',
            description: 'Ch·ª©ng t·ªè giai c·∫•p c√¥ng nh√¢n ƒë√£ tr∆∞·ªüng th√†nh',
            icon: 'üí™',
            color: 'from-red-500 to-red-700'
          },
          {
            title: 'G·∫Øn v·ªõi c√°ch m·∫°ng th·∫ø gi·ªõi',
            description: 'Tr·ªü th√†nh b·ªô ph·∫≠n c·ªßa c√°ch m·∫°ng v√¥ s·∫£n th·∫ø gi·ªõi',
            icon: 'üåç',
            color: 'from-purple-500 to-purple-700'
          }
        ].map((item, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.2 }}
            className={`bg-gradient-to-br ${item.color} rounded-xl p-6`}
          >
            <div className="text-4xl mb-4">{item.icon}</div>
            <h3 className="text-xl font-bold text-white mb-2">{item.title}</h3>
            <p className="text-gray-200">{item.description}</p>
          </motion.div>
        ))}
      </div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.8 }}
        className="bg-gradient-to-r from-yellow-500 to-yellow-700 rounded-xl p-6 mt-8"
      >
        <div className="text-center">
          <div className="text-4xl mb-4">üìú</div>
          <h3 className="text-2xl font-bold text-white mb-4">L·ªùi Ch·ªß t·ªãch H·ªì Ch√≠ Minh</h3>
          <blockquote className="text-white text-lg italic">
            Vi·ªác th√†nh l·∫≠p ƒê·∫£ng l√† m·ªôt b∆∞·ªõc ngo·∫∑t v√¥ c√πng quan tr·ªçng trong l·ªãch s·ª≠ c√°ch m·∫°ng Vi·ªát Nam ta. 
            N√≥ ch·ª©ng t·ªè r·∫±ng giai c·∫•p v√¥ s·∫£n ta ƒë√£ tr∆∞·ªüng th√†nh v√† ƒë·ªß s·ª©c l√£nh ƒë·∫°o c√°ch m·∫°ng.
          </blockquote>
        </div>
      </motion.div>
    </div>
  )

  const renderCurrentStep = () => {
    switch (currentStep) {
      case 0:
        return renderHistoricalContext()
      case 1:
        return renderPredecessorOrgs()
      case 2:
        return renderUnificationConference()
      case 3:
        return renderHistoricalSignificance()
      default:
        return renderHistoricalContext()
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-red-900 to-gray-900 p-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-8"
        >
          <h1 className="text-4xl md:text-5xl font-bold text-white mb-4">
            Th√†nh l·∫≠p ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam
          </h1>
          <p className="text-gray-300 text-xl">
            Qu√° tr√¨nh h√¨nh th√†nh v√† ph√°t tri·ªÉn (1930)
          </p>
        </motion.div>

        {/* Progress Steps */}
        <div className="flex justify-center mb-8">
          <div className="flex space-x-4 bg-black bg-opacity-30 rounded-full p-2">
            {steps.map((step, index) => (
              <button
                key={index}
                onClick={() => setCurrentStep(index)}
                className={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 ${
                  currentStep === index
                    ? 'bg-red-600 text-white'
                    : 'text-gray-300 hover:text-white hover:bg-gray-700'
                }`}
              >
                {step}
              </button>
            ))}
          </div>
        </div>

        {/* Content */}
        <AnimatePresence mode="wait">
          <motion.div
            key={currentStep}
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            transition={{ duration: 0.3 }}
          >
            {renderCurrentStep()}
          </motion.div>
        </AnimatePresence>

        {/* Navigation */}
        <div className="flex justify-between items-center mt-12">
          <div className="flex items-center space-x-4">
            <button
              onClick={onBack}
              className="flex items-center px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors duration-300"
            >
              <ChevronLeft className="w-5 h-5 mr-2" />
              Quay l·∫°i
            </button>
            
            {onGoToDashboard && (
              <button
                onClick={onGoToDashboard}
                className="flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-300"
              >
                üìä B·∫£ng ƒëi·ªÅu khi·ªÉn
              </button>
            )}
          </div>
            
          <div className="flex space-x-4">
            <button
              onClick={() => setCurrentStep(Math.max(0, currentStep - 1))}
              disabled={currentStep === 0}
              className="px-6 py-3 bg-gray-700 hover:bg-gray-600 disabled:bg-gray-800 disabled:opacity-50 text-white rounded-lg transition-colors duration-300"
            >
              B∆∞·ªõc tr∆∞·ªõc
            </button>
            
            {currentStep < steps.length - 1 ? (
              <button
                onClick={() => setCurrentStep(Math.min(steps.length - 1, currentStep + 1))}
                className="px-6 py-3 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors duration-300"
              >
                B∆∞·ªõc ti·∫øp
              </button>
            ) : (
              <button
                onClick={onNext}
                className="flex items-center px-6 py-3 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors duration-300"
              >
                Ti·∫øp t·ª•c
                <ChevronRight className="w-5 h-5 ml-2" />
              </button>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}